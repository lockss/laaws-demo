#!/bin/sh

# Copyright (c) 2000-2018, Board of Trustees of Leland Stanford Jr. University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

CONFIGDIR="$(dirname "${0}")/../config"

#
# Source plain-conf.sh and common-conf.sh 
#
set -a
source "${CONFIGDIR}/plain-conf.sh"
source "${CONFIGDIR}/common-conf.sh"
set +a

#
# Definitions
#
SNAPSHOTS='https://oss.sonatype.org/content/repositories/snapshots'
RELEASES='https://repo.maven.apache.org/maven2'
JARDIR='download'
SLEEP=30

#
# function Check_Installed
#
function Check_Installed()
{
  EXE="${1}"
  if ! which "${EXE}" &> /dev/null ; then
    echo "$(basename "${0}"): ${EXE} not on the PATH (${PATH})"
    exit 1
  fi
}

#
# function Download_If_Modified_Since
#
function Download_If_Modified_Since()
{
  local URL="${1}"
  local FILE="${2}"
  curl --output "${FILE}" --time-cond "${FILE}" "${URL}"
}

#
# function Download_Release
#
function Download_Release()
{
  local GROUP="${1}"
  local ARTIFACT="${2}"
  local VERSION="${3}"
  local BASEURL="${RELEASES}/$(echo "${GROUP}" | sed -e 's@\.@/@g')/${ARTIFACT}/${VERSION}"
  local JAR="${ARTIFACT}-${VERSION}.jar"
  local URL="${BASEURL}/${JAR}"
  local FILE="${JARDIR}/${JAR}"
  Download_If_Modified_Since "${URL}" "${FILE}"
}

#
# function Download_Snapshot
#
function Download_Snapshot()
{
  local GROUP="${1}"
  local ARTIFACT="${2}"
  local VERSION="${3}"
  local BASEURL="${SNAPSHOTS}/$(echo "${GROUP}" | sed -e 's@\.@/@g')/${ARTIFACT}/${VERSION}"
  local METAURL="${BASEURL}/maven-metadata.xml"
  local REALVERSION=$(curl --silent "${METAURL}" | xmllint --xpath '/metadata/versioning/snapshotVersions/snapshotVersion[extension = "jar" and not(classifier)]/value/text()' -)
  local URL="${BASEURL}/${ARTIFACT}-${REALVERSION}.jar"
  local FILE="${JARDIR}/${ARTIFACT}-${VERSION}.jar"
  Download_If_Modified_Since "${URL}" "${FILE}"
}

#
# function Download_Artifact
#
function Download_Artifact()
{
  local GROUP="${1}"
  local ARTIFACT="${2}"
  local VERSION="${3}"
  case "${VERSION}" in
    *-SNAPSHOT)
      Download_Snapshot "${GROUP}" "${ARTIFACT}" "${VERSION}";;
    *)
      Download_Release "${GROUP}" "${ARTIFACT}" "${VERSION}";;
  esac
}

#
# Check that necessary executables are found
#
Check_Installed 'curl'
Check_Installed 'xmllint'

#
# Make $JARDIR if necessary
#
if [ ! -d "${JARDIR}" ]; then
  mkdir "${JARDIR}"
fi

#
# Download Maven artifacts if necessary
#
Download_Artifact "${CFG_GRP}" "${CFG_ART}" "${CFG_VERSION}"
Download_Artifact "${MDQ_GRP}" "${MDQ_ART}" "${MDQ_VERSION}"
Download_Artifact "${MDX_GRP}" "${MDX_ART}" "${MDX_VERSION}"
Download_Artifact "${POL_GRP}" "${POL_ART}" "${POL_VERSION}"
Download_Artifact "${REPO_GRP}" "${REPO_ART}" "${REPO_VERSION}"

#
# Start components
#
java -jar "${JARDIR}/${CFG_ART}-${CFG_VERSION}.jar" ${CFG_CMD} &
echo "$!" > "${CFG_ART}.pid"
java -jar "${JARDIR}/${REPO_ART}-${REPO_VERSION}.jar" ${REPO_CMD} &
echo "$!" > "${REPO_ART}.pid"
sleep $SLEEP
java -jar "${JARDIR}/${MDQ_ART}-${MDQ_VERSION}.jar" ${MDQ_CMD} &
echo "$!" > "${MDQ_ART}.pid"
sleep $SLEEP
java -jar "${JARDIR}/${MDX_ART}-${MDX_VERSION}.jar" ${MDX_CMD} &
echo "$!" > "${MDX_ART}.pid"
java -jar "${JARDIR}/${POL_ART}-${POL_VERSION}.jar" ${POL_CMD} &
echo "$!" > "${POL_ART}.pid"
